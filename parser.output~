Terminals unused in grammar

    STATEMENT


State 4 conflicts: 4 shift/reduce
State 6 conflicts: 4 shift/reduce
State 10 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 12 conflicts: 4 shift/reduce
State 18 conflicts: 1 shift/reduce
State 24 conflicts: 7 shift/reduce
State 51 conflicts: 8 shift/reduce
State 67 conflicts: 4 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 4 shift/reduce
State 135 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 179 conflicts: 4 shift/reduce
State 185 conflicts: 7 shift/reduce
State 191 conflicts: 1 shift/reduce
State 195 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT decl_part body

    2 $@1: %empty

    3 program: PROGRAM error $@1 decl_part body

    4 decl_part: %empty
    5          | variable_decl
    6          | procedure_decl
    7          | function_decl
    8          | decl_part_list

    9 decl_part_list: decl_part_list variable_decl
   10               | decl_part_list procedure_decl
   11               | decl_part_list function_decl
   12               | decl_part

   13 body: BEGINN statement_list END

   14 $@2: %empty

   15 body: BEGINN error $@2 END

   16 statement_list: statement_list statement
   17               | statement

   18 variable_decl: IDENT COLON type
   19              | IDENT ASGN type
   20              | ident_list COLON type

   21 procedure_decl: PROCEDURE IDENT LPAREN parameter_list RPAREN decl_part body
   22               | PROCEDURE IDENT LPAREN RPAREN decl_part body

   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN COLON simple_type decl_part body

   24 parameter_list: ident_list COLON parameter_type
   25               | parameter_list SEMI

   26 parameter_type: simple_type
   27               | IDENT

   28 type: simple_type
   29     | IDENT
   30     | ARRAY LBRACK index RBRACK OF type
   31     | RECORD field_list END

   32 simple_type: INT
   33            | FLOAT
   34            | BOOL

   35 index: ICONST COLON ICONST
   36      | ICONST COLON ICONST COMMA index

   37 field_list: IDENT COLON type
   38           | IDENT COMMA field_list
   39           | IDENT COLON type field_list

   40 possible_ident: IDENT
   41               | AMP IDENT

   42 ident_list: possible_ident
   43           | ident_list COMMA possible_ident

   44 statement: %empty
   45          | assignment_statement
   46          | subroutine_call
   47          | RETURN_statement
   48          | FOR_statement
   49          | WHILE_statement
   50          | IF_statement
   51          | READ_statement
   52          | WRITE_statement

   53 assignment_statement: variable ASGN expression

   54 subroutine_call: IDENT LPAREN RPAREN
   55                | IDENT LPAREN expression RPAREN
   56                | IDENT LPAREN expression COMMA expression RPAREN

   57 RETURN_statement: RETURN expression

   58 FOR_statement: FOR IDENT IN expression COLON expression statement END

   59 WHILE_statement: WHILE LPAREN expression RPAREN statement END

   60 IF_statement: IF LPAREN expression RPAREN THEN statement END
   61             | IF LPAREN expression RPAREN THEN statement statement ELIF_part END
   62             | IF LPAREN expression RPAREN THEN statement ELIF_part END
   63             | IF LPAREN expression RPAREN THEN statement ELSE_part END
   64             | IF LPAREN expression RPAREN THEN statement statement ELIF_part ELSE_part END
   65             | IF LPAREN expression RPAREN THEN statement ELIF_part ELSE_part END

   66 ELSE_part: ELSE statement

   67 ELIF_part: ELIF LPAREN expression RPAREN THEN statement
   68          | ELIF LPAREN expression RPAREN THEN statement ELIF_part

   69 WRITE_statement: WRITE LPAREN SCONST RPAREN
   70                | WRITE LPAREN SCONST COMMA expression COMMA expression RPAREN

   71 READ_statement: READ LPAREN SCONST COMMA expression RPAREN
   72               | READ LPAREN SCONST COMMA expression COMMA RPAREN

   73 expression: AND_expression
   74           | AND_expression DBAR AND_expression

   75 AND_expression: logic_expression
   76               | logic_expression DAMP logic_expression

   77 logic_expression: simple_expression
   78                 | simple_expression LT simple_expression
   79                 | simple_expression LE simple_expression
   80                 | simple_expression EQ simple_expression
   81                 | simple_expression NE simple_expression
   82                 | simple_expression GE simple_expression
   83                 | simple_expression GT simple_expression

   84 simple_expression: term
   85                  | PLUS term
   86                  | MINUS term
   87                  | term PLUS term
   88                  | term MINUS term

   89 term: factor
   90     | factor STAR factor
   91     | factor DIV factor

   92 factor: constant
   93       | variable
   94       | subroutine_call
   95       | LPAREN expression RPAREN
   96       | BANG factor

   97 variable: IDENT
   98         | IDENT array_var
   99         | IDENT rec_var
  100         | IDENT array_var rec_var

  101 array_var: LBRACK expression RBRACK
  102          | LBRACK expression_list RBRACK

  103 rec_var: DOT variable
  104        | rec_var DOT variable

  105 expression_list: expression
  106                | expression_list COMMA expression

  107 constant: ICONST
  108         | FCONST
  109         | TRUE
  110         | FALSE


Terminals, with rules where they appear

    $end (0) 0
    error (256) 3 15
    AMP (258) 41
    ASGN (259) 19 53
    BANG (260) 96
    COLON (261) 18 20 23 24 35 36 37 39 58
    COMMA (262) 36 38 43 56 70 71 72 106
    DAMP (263) 76
    DBAR (264) 74
    DIV (265) 91
    DOT (266) 103 104
    EQ (267) 80
    GE (268) 82
    GT (269) 83
    LBRACK (270) 30 101 102
    LE (271) 79
    LPAREN (272) 21 22 23 54 55 56 59 60 61 62 63 64 65 67 68 69 70 71 72 95
    LT (273) 78
    MINUS (274) 86 88
    NE (275) 81
    PLUS (276) 85 87
    RBRACK (277) 30 101 102
    RPAREN (278) 21 22 23 54 55 56 59 60 61 62 63 64 65 67 68 69 70 71 72 95
    SEMI (279) 25
    STAR (280) 90
    ARRAY (281) 30
    BEGINN (282) 13 15
    BOOL (283) 34
    ELSE (284) 66
    ELIF (285) 67 68
    END (286) 13 15 31 58 59 60 61 62 63 64 65
    FALSE (287) 110
    FOR (288) 58
    FLOAT (289) 33
    FUNCTION (290) 23
    IF (291) 60 61 62 63 64 65
    IN (292) 58
    INT (293) 32
    OF (294) 30
    PROCEDURE (295) 21 22
    PROGRAM (296) 1 3
    READ (297) 71 72
    RECORD (298) 31
    RETURN (299) 57
    THEN (300) 60 61 62 63 64 65 67 68
    TRUE (301) 109
    WHILE (302) 59
    WRITE (303) 69 70
    FCONST (304) 108
    ICONST (305) 35 36 107
    IDENT (306) 1 18 19 21 22 23 27 29 37 38 39 40 41 54 55 56 58 97 98 99 100
    SCONST (307) 69 70 71 72
    STATEMENT (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1 3
        on right: 0
    $@1 (56)
        on left: 2
        on right: 3
    decl_part (57)
        on left: 4 5 6 7 8
        on right: 1 3 12 21 22 23
    decl_part_list (58)
        on left: 9 10 11 12
        on right: 8 9 10 11
    body (59)
        on left: 13 15
        on right: 1 3 21 22 23
    $@2 (60)
        on left: 14
        on right: 15
    statement_list (61)
        on left: 16 17
        on right: 13 16
    variable_decl (62)
        on left: 18 19 20
        on right: 5 9
    procedure_decl (63)
        on left: 21 22
        on right: 6 10
    function_decl (64)
        on left: 23
        on right: 7 11
    parameter_list (65)
        on left: 24 25
        on right: 21 23 25
    parameter_type (66)
        on left: 26 27
        on right: 24
    type (67)
        on left: 28 29 30 31
        on right: 18 19 20 30 37 39
    simple_type (68)
        on left: 32 33 34
        on right: 23 26 28
    index (69)
        on left: 35 36
        on right: 30 36
    field_list (70)
        on left: 37 38 39
        on right: 31 38 39
    possible_ident (71)
        on left: 40 41
        on right: 42 43
    ident_list (72)
        on left: 42 43
        on right: 20 24 43
    statement (73)
        on left: 44 45 46 47 48 49 50 51 52
        on right: 16 17 58 59 60 61 62 63 64 65 66 67 68
    assignment_statement (74)
        on left: 53
        on right: 45
    subroutine_call (75)
        on left: 54 55 56
        on right: 46 94
    RETURN_statement (76)
        on left: 57
        on right: 47
    FOR_statement (77)
        on left: 58
        on right: 48
    WHILE_statement (78)
        on left: 59
        on right: 49
    IF_statement (79)
        on left: 60 61 62 63 64 65
        on right: 50
    ELSE_part (80)
        on left: 66
        on right: 63 64 65
    ELIF_part (81)
        on left: 67 68
        on right: 61 62 64 65 68
    WRITE_statement (82)
        on left: 69 70
        on right: 52
    READ_statement (83)
        on left: 71 72
        on right: 51
    expression (84)
        on left: 73 74
        on right: 53 55 56 57 58 59 60 61 62 63 64 65 67 68 70 71 72 95 101 105 106
    AND_expression (85)
        on left: 75 76
        on right: 73 74
    logic_expression (86)
        on left: 77 78 79 80 81 82 83
        on right: 75 76
    simple_expression (87)
        on left: 84 85 86 87 88
        on right: 77 78 79 80 81 82 83
    term (88)
        on left: 89 90 91
        on right: 84 85 86 87 88
    factor (89)
        on left: 92 93 94 95 96
        on right: 89 90 91 96
    variable (90)
        on left: 97 98 99 100
        on right: 53 93 103 104
    array_var (91)
        on left: 101 102
        on right: 98 100
    rec_var (92)
        on left: 103 104
        on right: 99 100 104
    expression_list (93)
        on left: 105 106
        on right: 102 106
    constant (94)
        on left: 107 108 109 110
        on right: 92


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT decl_part body
    3        | PROGRAM . error $@1 decl_part body

    error  shift, and go to state 3
    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    3 program: PROGRAM error . $@1 decl_part body

    $default  reduce using rule 2 ($@1)

    $@1  go to state 6


State 4

    1 program: PROGRAM IDENT . decl_part body

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 4 (decl_part)]
    FUNCTION   [reduce using rule 4 (decl_part)]
    PROCEDURE  [reduce using rule 4 (decl_part)]
    IDENT      [reduce using rule 4 (decl_part)]
    $default   reduce using rule 4 (decl_part)

    decl_part       go to state 11
    decl_part_list  go to state 12
    variable_decl   go to state 13
    procedure_decl  go to state 14
    function_decl   go to state 15
    possible_ident  go to state 16
    ident_list      go to state 17


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 program: PROGRAM error $@1 . decl_part body

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 4 (decl_part)]
    FUNCTION   [reduce using rule 4 (decl_part)]
    PROCEDURE  [reduce using rule 4 (decl_part)]
    IDENT      [reduce using rule 4 (decl_part)]
    $default   reduce using rule 4 (decl_part)

    decl_part       go to state 18
    decl_part_list  go to state 12
    variable_decl   go to state 13
    procedure_decl  go to state 14
    function_decl   go to state 15
    possible_ident  go to state 16
    ident_list      go to state 17


State 7

   41 possible_ident: AMP . IDENT

    IDENT  shift, and go to state 19


State 8

   23 function_decl: FUNCTION . IDENT LPAREN parameter_list RPAREN COLON simple_type decl_part body

    IDENT  shift, and go to state 20


State 9

   21 procedure_decl: PROCEDURE . IDENT LPAREN parameter_list RPAREN decl_part body
   22               | PROCEDURE . IDENT LPAREN RPAREN decl_part body

    IDENT  shift, and go to state 21


State 10

   18 variable_decl: IDENT . COLON type
   19              | IDENT . ASGN type
   40 possible_ident: IDENT .

    ASGN   shift, and go to state 22
    COLON  shift, and go to state 23

    COLON     [reduce using rule 40 (possible_ident)]
    $default  reduce using rule 40 (possible_ident)


State 11

    1 program: PROGRAM IDENT decl_part . body
   12 decl_part_list: decl_part .

    BEGINN  shift, and go to state 24

    BEGINN    [reduce using rule 12 (decl_part_list)]
    $default  reduce using rule 12 (decl_part_list)

    body  go to state 25


State 12

    8 decl_part: decl_part_list .
    9 decl_part_list: decl_part_list . variable_decl
   10               | decl_part_list . procedure_decl
   11               | decl_part_list . function_decl

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 8 (decl_part)]
    FUNCTION   [reduce using rule 8 (decl_part)]
    PROCEDURE  [reduce using rule 8 (decl_part)]
    IDENT      [reduce using rule 8 (decl_part)]
    $default   reduce using rule 8 (decl_part)

    variable_decl   go to state 26
    procedure_decl  go to state 27
    function_decl   go to state 28
    possible_ident  go to state 16
    ident_list      go to state 17


State 13

    5 decl_part: variable_decl .

    $default  reduce using rule 5 (decl_part)


State 14

    6 decl_part: procedure_decl .

    $default  reduce using rule 6 (decl_part)


State 15

    7 decl_part: function_decl .

    $default  reduce using rule 7 (decl_part)


State 16

   42 ident_list: possible_ident .

    $default  reduce using rule 42 (ident_list)


State 17

   20 variable_decl: ident_list . COLON type
   43 ident_list: ident_list . COMMA possible_ident

    COLON  shift, and go to state 29
    COMMA  shift, and go to state 30


State 18

    3 program: PROGRAM error $@1 decl_part . body
   12 decl_part_list: decl_part .

    BEGINN  shift, and go to state 24

    BEGINN    [reduce using rule 12 (decl_part_list)]
    $default  reduce using rule 12 (decl_part_list)

    body  go to state 31


State 19

   41 possible_ident: AMP IDENT .

    $default  reduce using rule 41 (possible_ident)


State 20

   23 function_decl: FUNCTION IDENT . LPAREN parameter_list RPAREN COLON simple_type decl_part body

    LPAREN  shift, and go to state 32


State 21

   21 procedure_decl: PROCEDURE IDENT . LPAREN parameter_list RPAREN decl_part body
   22               | PROCEDURE IDENT . LPAREN RPAREN decl_part body

    LPAREN  shift, and go to state 33


State 22

   19 variable_decl: IDENT ASGN . type

    ARRAY   shift, and go to state 34
    BOOL    shift, and go to state 35
    FLOAT   shift, and go to state 36
    INT     shift, and go to state 37
    RECORD  shift, and go to state 38
    IDENT   shift, and go to state 39

    type         go to state 40
    simple_type  go to state 41


State 23

   18 variable_decl: IDENT COLON . type

    ARRAY   shift, and go to state 34
    BOOL    shift, and go to state 35
    FLOAT   shift, and go to state 36
    INT     shift, and go to state 37
    RECORD  shift, and go to state 38
    IDENT   shift, and go to state 39

    type         go to state 42
    simple_type  go to state 41


State 24

   13 body: BEGINN . statement_list END
   15     | BEGINN . error $@2 END

    error   shift, and go to state 43
    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    END     reduce using rule 44 (statement)
    FOR     [reduce using rule 44 (statement)]
    IF      [reduce using rule 44 (statement)]
    READ    [reduce using rule 44 (statement)]
    RETURN  [reduce using rule 44 (statement)]
    WHILE   [reduce using rule 44 (statement)]
    WRITE   [reduce using rule 44 (statement)]
    IDENT   [reduce using rule 44 (statement)]

    statement_list        go to state 51
    statement             go to state 52
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 25

    1 program: PROGRAM IDENT decl_part body .

    $default  reduce using rule 1 (program)


State 26

    9 decl_part_list: decl_part_list variable_decl .

    $default  reduce using rule 9 (decl_part_list)


State 27

   10 decl_part_list: decl_part_list procedure_decl .

    $default  reduce using rule 10 (decl_part_list)


State 28

   11 decl_part_list: decl_part_list function_decl .

    $default  reduce using rule 11 (decl_part_list)


State 29

   20 variable_decl: ident_list COLON . type

    ARRAY   shift, and go to state 34
    BOOL    shift, and go to state 35
    FLOAT   shift, and go to state 36
    INT     shift, and go to state 37
    RECORD  shift, and go to state 38
    IDENT   shift, and go to state 39

    type         go to state 62
    simple_type  go to state 41


State 30

   43 ident_list: ident_list COMMA . possible_ident

    AMP    shift, and go to state 7
    IDENT  shift, and go to state 63

    possible_ident  go to state 64


State 31

    3 program: PROGRAM error $@1 decl_part body .

    $default  reduce using rule 3 (program)


State 32

   23 function_decl: FUNCTION IDENT LPAREN . parameter_list RPAREN COLON simple_type decl_part body

    AMP    shift, and go to state 7
    IDENT  shift, and go to state 63

    parameter_list  go to state 65
    possible_ident  go to state 16
    ident_list      go to state 66


State 33

   21 procedure_decl: PROCEDURE IDENT LPAREN . parameter_list RPAREN decl_part body
   22               | PROCEDURE IDENT LPAREN . RPAREN decl_part body

    AMP     shift, and go to state 7
    RPAREN  shift, and go to state 67
    IDENT   shift, and go to state 63

    parameter_list  go to state 68
    possible_ident  go to state 16
    ident_list      go to state 66


State 34

   30 type: ARRAY . LBRACK index RBRACK OF type

    LBRACK  shift, and go to state 69


State 35

   34 simple_type: BOOL .

    $default  reduce using rule 34 (simple_type)


State 36

   33 simple_type: FLOAT .

    $default  reduce using rule 33 (simple_type)


State 37

   32 simple_type: INT .

    $default  reduce using rule 32 (simple_type)


State 38

   31 type: RECORD . field_list END

    IDENT  shift, and go to state 70

    field_list  go to state 71


State 39

   29 type: IDENT .

    $default  reduce using rule 29 (type)


State 40

   19 variable_decl: IDENT ASGN type .

    $default  reduce using rule 19 (variable_decl)


State 41

   28 type: simple_type .

    $default  reduce using rule 28 (type)


State 42

   18 variable_decl: IDENT COLON type .

    $default  reduce using rule 18 (variable_decl)


State 43

   15 body: BEGINN error . $@2 END

    $default  reduce using rule 14 ($@2)

    $@2  go to state 72


State 44

   58 FOR_statement: FOR . IDENT IN expression COLON expression statement END

    IDENT  shift, and go to state 73


State 45

   60 IF_statement: IF . LPAREN expression RPAREN THEN statement END
   61             | IF . LPAREN expression RPAREN THEN statement statement ELIF_part END
   62             | IF . LPAREN expression RPAREN THEN statement ELIF_part END
   63             | IF . LPAREN expression RPAREN THEN statement ELSE_part END
   64             | IF . LPAREN expression RPAREN THEN statement statement ELIF_part ELSE_part END
   65             | IF . LPAREN expression RPAREN THEN statement ELIF_part ELSE_part END

    LPAREN  shift, and go to state 74


State 46

   71 READ_statement: READ . LPAREN SCONST COMMA expression RPAREN
   72               | READ . LPAREN SCONST COMMA expression COMMA RPAREN

    LPAREN  shift, and go to state 75


State 47

   57 RETURN_statement: RETURN . expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 85
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 48

   59 WHILE_statement: WHILE . LPAREN expression RPAREN statement END

    LPAREN  shift, and go to state 93


State 49

   69 WRITE_statement: WRITE . LPAREN SCONST RPAREN
   70                | WRITE . LPAREN SCONST COMMA expression COMMA expression RPAREN

    LPAREN  shift, and go to state 94


State 50

   54 subroutine_call: IDENT . LPAREN RPAREN
   55                | IDENT . LPAREN expression RPAREN
   56                | IDENT . LPAREN expression COMMA expression RPAREN
   97 variable: IDENT .
   98         | IDENT . array_var
   99         | IDENT . rec_var
  100         | IDENT . array_var rec_var

    DOT     shift, and go to state 95
    LBRACK  shift, and go to state 96
    LPAREN  shift, and go to state 97

    $default  reduce using rule 97 (variable)

    array_var  go to state 98
    rec_var    go to state 99


State 51

   13 body: BEGINN statement_list . END
   16 statement_list: statement_list . statement

    END     shift, and go to state 100
    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    END     [reduce using rule 44 (statement)]
    FOR     [reduce using rule 44 (statement)]
    IF      [reduce using rule 44 (statement)]
    READ    [reduce using rule 44 (statement)]
    RETURN  [reduce using rule 44 (statement)]
    WHILE   [reduce using rule 44 (statement)]
    WRITE   [reduce using rule 44 (statement)]
    IDENT   [reduce using rule 44 (statement)]

    statement             go to state 101
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 52

   17 statement_list: statement .

    $default  reduce using rule 17 (statement_list)


State 53

   45 statement: assignment_statement .

    $default  reduce using rule 45 (statement)


State 54

   46 statement: subroutine_call .

    $default  reduce using rule 46 (statement)


State 55

   47 statement: RETURN_statement .

    $default  reduce using rule 47 (statement)


State 56

   48 statement: FOR_statement .

    $default  reduce using rule 48 (statement)


State 57

   49 statement: WHILE_statement .

    $default  reduce using rule 49 (statement)


State 58

   50 statement: IF_statement .

    $default  reduce using rule 50 (statement)


State 59

   52 statement: WRITE_statement .

    $default  reduce using rule 52 (statement)


State 60

   51 statement: READ_statement .

    $default  reduce using rule 51 (statement)


State 61

   53 assignment_statement: variable . ASGN expression

    ASGN  shift, and go to state 102


State 62

   20 variable_decl: ident_list COLON type .

    $default  reduce using rule 20 (variable_decl)


State 63

   40 possible_ident: IDENT .

    $default  reduce using rule 40 (possible_ident)


State 64

   43 ident_list: ident_list COMMA possible_ident .

    $default  reduce using rule 43 (ident_list)


State 65

   23 function_decl: FUNCTION IDENT LPAREN parameter_list . RPAREN COLON simple_type decl_part body
   25 parameter_list: parameter_list . SEMI

    RPAREN  shift, and go to state 103
    SEMI    shift, and go to state 104


State 66

   24 parameter_list: ident_list . COLON parameter_type
   43 ident_list: ident_list . COMMA possible_ident

    COLON  shift, and go to state 105
    COMMA  shift, and go to state 30


State 67

   22 procedure_decl: PROCEDURE IDENT LPAREN RPAREN . decl_part body

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 4 (decl_part)]
    FUNCTION   [reduce using rule 4 (decl_part)]
    PROCEDURE  [reduce using rule 4 (decl_part)]
    IDENT      [reduce using rule 4 (decl_part)]
    $default   reduce using rule 4 (decl_part)

    decl_part       go to state 106
    decl_part_list  go to state 12
    variable_decl   go to state 13
    procedure_decl  go to state 14
    function_decl   go to state 15
    possible_ident  go to state 16
    ident_list      go to state 17


State 68

   21 procedure_decl: PROCEDURE IDENT LPAREN parameter_list . RPAREN decl_part body
   25 parameter_list: parameter_list . SEMI

    RPAREN  shift, and go to state 107
    SEMI    shift, and go to state 104


State 69

   30 type: ARRAY LBRACK . index RBRACK OF type

    ICONST  shift, and go to state 108

    index  go to state 109


State 70

   37 field_list: IDENT . COLON type
   38           | IDENT . COMMA field_list
   39           | IDENT . COLON type field_list

    COLON  shift, and go to state 110
    COMMA  shift, and go to state 111


State 71

   31 type: RECORD field_list . END

    END  shift, and go to state 112


State 72

   15 body: BEGINN error $@2 . END

    END  shift, and go to state 113


State 73

   58 FOR_statement: FOR IDENT . IN expression COLON expression statement END

    IN  shift, and go to state 114


State 74

   60 IF_statement: IF LPAREN . expression RPAREN THEN statement END
   61             | IF LPAREN . expression RPAREN THEN statement statement ELIF_part END
   62             | IF LPAREN . expression RPAREN THEN statement ELIF_part END
   63             | IF LPAREN . expression RPAREN THEN statement ELSE_part END
   64             | IF LPAREN . expression RPAREN THEN statement statement ELIF_part ELSE_part END
   65             | IF LPAREN . expression RPAREN THEN statement ELIF_part ELSE_part END

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 115
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 75

   71 READ_statement: READ LPAREN . SCONST COMMA expression RPAREN
   72               | READ LPAREN . SCONST COMMA expression COMMA RPAREN

    SCONST  shift, and go to state 116


State 76

   96 factor: BANG . factor

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    factor           go to state 117
    variable         go to state 91
    constant         go to state 92


State 77

   95 factor: LPAREN . expression RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 118
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 78

   86 simple_expression: MINUS . term

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    term             go to state 119
    factor           go to state 90
    variable         go to state 91
    constant         go to state 92


State 79

   85 simple_expression: PLUS . term

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    term             go to state 120
    factor           go to state 90
    variable         go to state 91
    constant         go to state 92


State 80

  110 constant: FALSE .

    $default  reduce using rule 110 (constant)


State 81

  109 constant: TRUE .

    $default  reduce using rule 109 (constant)


State 82

  108 constant: FCONST .

    $default  reduce using rule 108 (constant)


State 83

  107 constant: ICONST .

    $default  reduce using rule 107 (constant)


State 84

   94 factor: subroutine_call .

    $default  reduce using rule 94 (factor)


State 85

   57 RETURN_statement: RETURN expression .

    $default  reduce using rule 57 (RETURN_statement)


State 86

   73 expression: AND_expression .
   74           | AND_expression . DBAR AND_expression

    DBAR  shift, and go to state 121

    $default  reduce using rule 73 (expression)


State 87

   75 AND_expression: logic_expression .
   76               | logic_expression . DAMP logic_expression

    DAMP  shift, and go to state 122

    $default  reduce using rule 75 (AND_expression)


State 88

   77 logic_expression: simple_expression .
   78                 | simple_expression . LT simple_expression
   79                 | simple_expression . LE simple_expression
   80                 | simple_expression . EQ simple_expression
   81                 | simple_expression . NE simple_expression
   82                 | simple_expression . GE simple_expression
   83                 | simple_expression . GT simple_expression

    EQ  shift, and go to state 123
    GE  shift, and go to state 124
    GT  shift, and go to state 125
    LE  shift, and go to state 126
    LT  shift, and go to state 127
    NE  shift, and go to state 128

    $default  reduce using rule 77 (logic_expression)


State 89

   84 simple_expression: term .
   87                  | term . PLUS term
   88                  | term . MINUS term

    MINUS  shift, and go to state 129
    PLUS   shift, and go to state 130

    $default  reduce using rule 84 (simple_expression)


State 90

   89 term: factor .
   90     | factor . STAR factor
   91     | factor . DIV factor

    DIV   shift, and go to state 131
    STAR  shift, and go to state 132

    $default  reduce using rule 89 (term)


State 91

   93 factor: variable .

    $default  reduce using rule 93 (factor)


State 92

   92 factor: constant .

    $default  reduce using rule 92 (factor)


State 93

   59 WHILE_statement: WHILE LPAREN . expression RPAREN statement END

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 133
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 94

   69 WRITE_statement: WRITE LPAREN . SCONST RPAREN
   70                | WRITE LPAREN . SCONST COMMA expression COMMA expression RPAREN

    SCONST  shift, and go to state 134


State 95

  103 rec_var: DOT . variable

    IDENT  shift, and go to state 135

    variable  go to state 136


State 96

  101 array_var: LBRACK . expression RBRACK
  102          | LBRACK . expression_list RBRACK

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 137
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    expression_list    go to state 138
    constant           go to state 92


State 97

   54 subroutine_call: IDENT LPAREN . RPAREN
   55                | IDENT LPAREN . expression RPAREN
   56                | IDENT LPAREN . expression COMMA expression RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    RPAREN  shift, and go to state 139
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 140
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 98

   98 variable: IDENT array_var .
  100         | IDENT array_var . rec_var

    DOT  shift, and go to state 95

    DOT       [reduce using rule 98 (variable)]
    $default  reduce using rule 98 (variable)

    rec_var  go to state 141


State 99

   99 variable: IDENT rec_var .
  104 rec_var: rec_var . DOT variable

    DOT  shift, and go to state 142

    DOT       [reduce using rule 99 (variable)]
    $default  reduce using rule 99 (variable)


State 100

   13 body: BEGINN statement_list END .

    $default  reduce using rule 13 (body)


State 101

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 102

   53 assignment_statement: variable ASGN . expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 143
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 103

   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN . COLON simple_type decl_part body

    COLON  shift, and go to state 144


State 104

   25 parameter_list: parameter_list SEMI .

    $default  reduce using rule 25 (parameter_list)


State 105

   24 parameter_list: ident_list COLON . parameter_type

    BOOL   shift, and go to state 35
    FLOAT  shift, and go to state 36
    INT    shift, and go to state 37
    IDENT  shift, and go to state 145

    parameter_type  go to state 146
    simple_type     go to state 147


State 106

   12 decl_part_list: decl_part .
   22 procedure_decl: PROCEDURE IDENT LPAREN RPAREN decl_part . body

    BEGINN  shift, and go to state 24

    BEGINN    [reduce using rule 12 (decl_part_list)]
    $default  reduce using rule 12 (decl_part_list)

    body  go to state 148


State 107

   21 procedure_decl: PROCEDURE IDENT LPAREN parameter_list RPAREN . decl_part body

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 4 (decl_part)]
    FUNCTION   [reduce using rule 4 (decl_part)]
    PROCEDURE  [reduce using rule 4 (decl_part)]
    IDENT      [reduce using rule 4 (decl_part)]
    $default   reduce using rule 4 (decl_part)

    decl_part       go to state 149
    decl_part_list  go to state 12
    variable_decl   go to state 13
    procedure_decl  go to state 14
    function_decl   go to state 15
    possible_ident  go to state 16
    ident_list      go to state 17


State 108

   35 index: ICONST . COLON ICONST
   36      | ICONST . COLON ICONST COMMA index

    COLON  shift, and go to state 150


State 109

   30 type: ARRAY LBRACK index . RBRACK OF type

    RBRACK  shift, and go to state 151


State 110

   37 field_list: IDENT COLON . type
   39           | IDENT COLON . type field_list

    ARRAY   shift, and go to state 34
    BOOL    shift, and go to state 35
    FLOAT   shift, and go to state 36
    INT     shift, and go to state 37
    RECORD  shift, and go to state 38
    IDENT   shift, and go to state 39

    type         go to state 152
    simple_type  go to state 41


State 111

   38 field_list: IDENT COMMA . field_list

    IDENT  shift, and go to state 70

    field_list  go to state 153


State 112

   31 type: RECORD field_list END .

    $default  reduce using rule 31 (type)


State 113

   15 body: BEGINN error $@2 END .

    $default  reduce using rule 15 (body)


State 114

   58 FOR_statement: FOR IDENT IN . expression COLON expression statement END

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 154
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 115

   60 IF_statement: IF LPAREN expression . RPAREN THEN statement END
   61             | IF LPAREN expression . RPAREN THEN statement statement ELIF_part END
   62             | IF LPAREN expression . RPAREN THEN statement ELIF_part END
   63             | IF LPAREN expression . RPAREN THEN statement ELSE_part END
   64             | IF LPAREN expression . RPAREN THEN statement statement ELIF_part ELSE_part END
   65             | IF LPAREN expression . RPAREN THEN statement ELIF_part ELSE_part END

    RPAREN  shift, and go to state 155


State 116

   71 READ_statement: READ LPAREN SCONST . COMMA expression RPAREN
   72               | READ LPAREN SCONST . COMMA expression COMMA RPAREN

    COMMA  shift, and go to state 156


State 117

   96 factor: BANG factor .

    $default  reduce using rule 96 (factor)


State 118

   95 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 157


State 119

   86 simple_expression: MINUS term .

    $default  reduce using rule 86 (simple_expression)


State 120

   85 simple_expression: PLUS term .

    $default  reduce using rule 85 (simple_expression)


State 121

   74 expression: AND_expression DBAR . AND_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    AND_expression     go to state 158
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 122

   76 AND_expression: logic_expression DAMP . logic_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    logic_expression   go to state 159
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 123

   80 logic_expression: simple_expression EQ . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 160
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 124

   82 logic_expression: simple_expression GE . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 161
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 125

   83 logic_expression: simple_expression GT . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 162
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 126

   79 logic_expression: simple_expression LE . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 163
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 127

   78 logic_expression: simple_expression LT . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 164
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 128

   81 logic_expression: simple_expression NE . simple_expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    simple_expression  go to state 165
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 129

   88 simple_expression: term MINUS . term

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    term             go to state 166
    factor           go to state 90
    variable         go to state 91
    constant         go to state 92


State 130

   87 simple_expression: term PLUS . term

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    term             go to state 167
    factor           go to state 90
    variable         go to state 91
    constant         go to state 92


State 131

   91 term: factor DIV . factor

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    factor           go to state 168
    variable         go to state 91
    constant         go to state 92


State 132

   90 term: factor STAR . factor

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call  go to state 84
    factor           go to state 169
    variable         go to state 91
    constant         go to state 92


State 133

   59 WHILE_statement: WHILE LPAREN expression . RPAREN statement END

    RPAREN  shift, and go to state 170


State 134

   69 WRITE_statement: WRITE LPAREN SCONST . RPAREN
   70                | WRITE LPAREN SCONST . COMMA expression COMMA expression RPAREN

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 172


State 135

   97 variable: IDENT .
   98         | IDENT . array_var
   99         | IDENT . rec_var
  100         | IDENT . array_var rec_var

    DOT     shift, and go to state 95
    LBRACK  shift, and go to state 96

    DOT       [reduce using rule 97 (variable)]
    $default  reduce using rule 97 (variable)

    array_var  go to state 98
    rec_var    go to state 99


State 136

  103 rec_var: DOT variable .

    $default  reduce using rule 103 (rec_var)


State 137

  101 array_var: LBRACK expression . RBRACK
  105 expression_list: expression .

    RBRACK  shift, and go to state 173

    RBRACK    [reduce using rule 105 (expression_list)]
    $default  reduce using rule 105 (expression_list)


State 138

  102 array_var: LBRACK expression_list . RBRACK
  106 expression_list: expression_list . COMMA expression

    COMMA   shift, and go to state 174
    RBRACK  shift, and go to state 175


State 139

   54 subroutine_call: IDENT LPAREN RPAREN .

    $default  reduce using rule 54 (subroutine_call)


State 140

   55 subroutine_call: IDENT LPAREN expression . RPAREN
   56                | IDENT LPAREN expression . COMMA expression RPAREN

    COMMA   shift, and go to state 176
    RPAREN  shift, and go to state 177


State 141

  100 variable: IDENT array_var rec_var .
  104 rec_var: rec_var . DOT variable

    DOT  shift, and go to state 142

    DOT       [reduce using rule 100 (variable)]
    $default  reduce using rule 100 (variable)


State 142

  104 rec_var: rec_var DOT . variable

    IDENT  shift, and go to state 135

    variable  go to state 178


State 143

   53 assignment_statement: variable ASGN expression .

    $default  reduce using rule 53 (assignment_statement)


State 144

   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN COLON . simple_type decl_part body

    BOOL   shift, and go to state 35
    FLOAT  shift, and go to state 36
    INT    shift, and go to state 37

    simple_type  go to state 179


State 145

   27 parameter_type: IDENT .

    $default  reduce using rule 27 (parameter_type)


State 146

   24 parameter_list: ident_list COLON parameter_type .

    $default  reduce using rule 24 (parameter_list)


State 147

   26 parameter_type: simple_type .

    $default  reduce using rule 26 (parameter_type)


State 148

   22 procedure_decl: PROCEDURE IDENT LPAREN RPAREN decl_part body .

    $default  reduce using rule 22 (procedure_decl)


State 149

   12 decl_part_list: decl_part .
   21 procedure_decl: PROCEDURE IDENT LPAREN parameter_list RPAREN decl_part . body

    BEGINN  shift, and go to state 24

    BEGINN    [reduce using rule 12 (decl_part_list)]
    $default  reduce using rule 12 (decl_part_list)

    body  go to state 180


State 150

   35 index: ICONST COLON . ICONST
   36      | ICONST COLON . ICONST COMMA index

    ICONST  shift, and go to state 181


State 151

   30 type: ARRAY LBRACK index RBRACK . OF type

    OF  shift, and go to state 182


State 152

   37 field_list: IDENT COLON type .
   39           | IDENT COLON type . field_list

    IDENT  shift, and go to state 70

    $default  reduce using rule 37 (field_list)

    field_list  go to state 183


State 153

   38 field_list: IDENT COMMA field_list .

    $default  reduce using rule 38 (field_list)


State 154

   58 FOR_statement: FOR IDENT IN expression . COLON expression statement END

    COLON  shift, and go to state 184


State 155

   60 IF_statement: IF LPAREN expression RPAREN . THEN statement END
   61             | IF LPAREN expression RPAREN . THEN statement statement ELIF_part END
   62             | IF LPAREN expression RPAREN . THEN statement ELIF_part END
   63             | IF LPAREN expression RPAREN . THEN statement ELSE_part END
   64             | IF LPAREN expression RPAREN . THEN statement statement ELIF_part ELSE_part END
   65             | IF LPAREN expression RPAREN . THEN statement ELIF_part ELSE_part END

    THEN  shift, and go to state 185


State 156

   71 READ_statement: READ LPAREN SCONST COMMA . expression RPAREN
   72               | READ LPAREN SCONST COMMA . expression COMMA RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 186
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 157

   95 factor: LPAREN expression RPAREN .

    $default  reduce using rule 95 (factor)


State 158

   74 expression: AND_expression DBAR AND_expression .

    $default  reduce using rule 74 (expression)


State 159

   76 AND_expression: logic_expression DAMP logic_expression .

    $default  reduce using rule 76 (AND_expression)


State 160

   80 logic_expression: simple_expression EQ simple_expression .

    $default  reduce using rule 80 (logic_expression)


State 161

   82 logic_expression: simple_expression GE simple_expression .

    $default  reduce using rule 82 (logic_expression)


State 162

   83 logic_expression: simple_expression GT simple_expression .

    $default  reduce using rule 83 (logic_expression)


State 163

   79 logic_expression: simple_expression LE simple_expression .

    $default  reduce using rule 79 (logic_expression)


State 164

   78 logic_expression: simple_expression LT simple_expression .

    $default  reduce using rule 78 (logic_expression)


State 165

   81 logic_expression: simple_expression NE simple_expression .

    $default  reduce using rule 81 (logic_expression)


State 166

   88 simple_expression: term MINUS term .

    $default  reduce using rule 88 (simple_expression)


State 167

   87 simple_expression: term PLUS term .

    $default  reduce using rule 87 (simple_expression)


State 168

   91 term: factor DIV factor .

    $default  reduce using rule 91 (term)


State 169

   90 term: factor STAR factor .

    $default  reduce using rule 90 (term)


State 170

   59 WHILE_statement: WHILE LPAREN expression RPAREN . statement END

    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    $default  reduce using rule 44 (statement)

    statement             go to state 187
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 171

   70 WRITE_statement: WRITE LPAREN SCONST COMMA . expression COMMA expression RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 188
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 172

   69 WRITE_statement: WRITE LPAREN SCONST RPAREN .

    $default  reduce using rule 69 (WRITE_statement)


State 173

  101 array_var: LBRACK expression RBRACK .

    $default  reduce using rule 101 (array_var)


State 174

  106 expression_list: expression_list COMMA . expression

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 189
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 175

  102 array_var: LBRACK expression_list RBRACK .

    $default  reduce using rule 102 (array_var)


State 176

   56 subroutine_call: IDENT LPAREN expression COMMA . expression RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 190
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 177

   55 subroutine_call: IDENT LPAREN expression RPAREN .

    $default  reduce using rule 55 (subroutine_call)


State 178

  104 rec_var: rec_var DOT variable .

    $default  reduce using rule 104 (rec_var)


State 179

   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN COLON simple_type . decl_part body

    AMP        shift, and go to state 7
    FUNCTION   shift, and go to state 8
    PROCEDURE  shift, and go to state 9
    IDENT      shift, and go to state 10

    AMP        [reduce using rule 4 (decl_part)]
    FUNCTION   [reduce using rule 4 (decl_part)]
    PROCEDURE  [reduce using rule 4 (decl_part)]
    IDENT      [reduce using rule 4 (decl_part)]
    $default   reduce using rule 4 (decl_part)

    decl_part       go to state 191
    decl_part_list  go to state 12
    variable_decl   go to state 13
    procedure_decl  go to state 14
    function_decl   go to state 15
    possible_ident  go to state 16
    ident_list      go to state 17


State 180

   21 procedure_decl: PROCEDURE IDENT LPAREN parameter_list RPAREN decl_part body .

    $default  reduce using rule 21 (procedure_decl)


State 181

   35 index: ICONST COLON ICONST .
   36      | ICONST COLON ICONST . COMMA index

    COMMA  shift, and go to state 192

    $default  reduce using rule 35 (index)


State 182

   30 type: ARRAY LBRACK index RBRACK OF . type

    ARRAY   shift, and go to state 34
    BOOL    shift, and go to state 35
    FLOAT   shift, and go to state 36
    INT     shift, and go to state 37
    RECORD  shift, and go to state 38
    IDENT   shift, and go to state 39

    type         go to state 193
    simple_type  go to state 41


State 183

   39 field_list: IDENT COLON type field_list .

    $default  reduce using rule 39 (field_list)


State 184

   58 FOR_statement: FOR IDENT IN expression COLON . expression statement END

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 194
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 185

   60 IF_statement: IF LPAREN expression RPAREN THEN . statement END
   61             | IF LPAREN expression RPAREN THEN . statement statement ELIF_part END
   62             | IF LPAREN expression RPAREN THEN . statement ELIF_part END
   63             | IF LPAREN expression RPAREN THEN . statement ELSE_part END
   64             | IF LPAREN expression RPAREN THEN . statement statement ELIF_part ELSE_part END
   65             | IF LPAREN expression RPAREN THEN . statement ELIF_part ELSE_part END

    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    FOR       [reduce using rule 44 (statement)]
    IF        [reduce using rule 44 (statement)]
    READ      [reduce using rule 44 (statement)]
    RETURN    [reduce using rule 44 (statement)]
    WHILE     [reduce using rule 44 (statement)]
    WRITE     [reduce using rule 44 (statement)]
    IDENT     [reduce using rule 44 (statement)]
    $default  reduce using rule 44 (statement)

    statement             go to state 195
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 186

   71 READ_statement: READ LPAREN SCONST COMMA expression . RPAREN
   72               | READ LPAREN SCONST COMMA expression . COMMA RPAREN

    COMMA   shift, and go to state 196
    RPAREN  shift, and go to state 197


State 187

   59 WHILE_statement: WHILE LPAREN expression RPAREN statement . END

    END  shift, and go to state 198


State 188

   70 WRITE_statement: WRITE LPAREN SCONST COMMA expression . COMMA expression RPAREN

    COMMA  shift, and go to state 199


State 189

  106 expression_list: expression_list COMMA expression .

    $default  reduce using rule 106 (expression_list)


State 190

   56 subroutine_call: IDENT LPAREN expression COMMA expression . RPAREN

    RPAREN  shift, and go to state 200


State 191

   12 decl_part_list: decl_part .
   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN COLON simple_type decl_part . body

    BEGINN  shift, and go to state 24

    BEGINN    [reduce using rule 12 (decl_part_list)]
    $default  reduce using rule 12 (decl_part_list)

    body  go to state 201


State 192

   36 index: ICONST COLON ICONST COMMA . index

    ICONST  shift, and go to state 108

    index  go to state 202


State 193

   30 type: ARRAY LBRACK index RBRACK OF type .

    $default  reduce using rule 30 (type)


State 194

   58 FOR_statement: FOR IDENT IN expression COLON expression . statement END

    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    $default  reduce using rule 44 (statement)

    statement             go to state 203
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 195

   60 IF_statement: IF LPAREN expression RPAREN THEN statement . END
   61             | IF LPAREN expression RPAREN THEN statement . statement ELIF_part END
   62             | IF LPAREN expression RPAREN THEN statement . ELIF_part END
   63             | IF LPAREN expression RPAREN THEN statement . ELSE_part END
   64             | IF LPAREN expression RPAREN THEN statement . statement ELIF_part ELSE_part END
   65             | IF LPAREN expression RPAREN THEN statement . ELIF_part ELSE_part END

    ELSE    shift, and go to state 204
    ELIF    shift, and go to state 205
    END     shift, and go to state 206
    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    ELIF  [reduce using rule 44 (statement)]

    statement             go to state 207
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    ELSE_part             go to state 208
    ELIF_part             go to state 209
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 196

   72 READ_statement: READ LPAREN SCONST COMMA expression COMMA . RPAREN

    RPAREN  shift, and go to state 210


State 197

   71 READ_statement: READ LPAREN SCONST COMMA expression RPAREN .

    $default  reduce using rule 71 (READ_statement)


State 198

   59 WHILE_statement: WHILE LPAREN expression RPAREN statement END .

    $default  reduce using rule 59 (WHILE_statement)


State 199

   70 WRITE_statement: WRITE LPAREN SCONST COMMA expression COMMA . expression RPAREN

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 211
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 200

   56 subroutine_call: IDENT LPAREN expression COMMA expression RPAREN .

    $default  reduce using rule 56 (subroutine_call)


State 201

   23 function_decl: FUNCTION IDENT LPAREN parameter_list RPAREN COLON simple_type decl_part body .

    $default  reduce using rule 23 (function_decl)


State 202

   36 index: ICONST COLON ICONST COMMA index .

    $default  reduce using rule 36 (index)


State 203

   58 FOR_statement: FOR IDENT IN expression COLON expression statement . END

    END  shift, and go to state 212


State 204

   66 ELSE_part: ELSE . statement

    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    $default  reduce using rule 44 (statement)

    statement             go to state 213
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 205

   67 ELIF_part: ELIF . LPAREN expression RPAREN THEN statement
   68          | ELIF . LPAREN expression RPAREN THEN statement ELIF_part

    LPAREN  shift, and go to state 214


State 206

   60 IF_statement: IF LPAREN expression RPAREN THEN statement END .

    $default  reduce using rule 60 (IF_statement)


State 207

   61 IF_statement: IF LPAREN expression RPAREN THEN statement statement . ELIF_part END
   64             | IF LPAREN expression RPAREN THEN statement statement . ELIF_part ELSE_part END

    ELIF  shift, and go to state 205

    ELIF_part  go to state 215


State 208

   63 IF_statement: IF LPAREN expression RPAREN THEN statement ELSE_part . END

    END  shift, and go to state 216


State 209

   62 IF_statement: IF LPAREN expression RPAREN THEN statement ELIF_part . END
   65             | IF LPAREN expression RPAREN THEN statement ELIF_part . ELSE_part END

    ELSE  shift, and go to state 204
    END   shift, and go to state 217

    ELSE_part  go to state 218


State 210

   72 READ_statement: READ LPAREN SCONST COMMA expression COMMA RPAREN .

    $default  reduce using rule 72 (READ_statement)


State 211

   70 WRITE_statement: WRITE LPAREN SCONST COMMA expression COMMA expression . RPAREN

    RPAREN  shift, and go to state 219


State 212

   58 FOR_statement: FOR IDENT IN expression COLON expression statement END .

    $default  reduce using rule 58 (FOR_statement)


State 213

   66 ELSE_part: ELSE statement .

    $default  reduce using rule 66 (ELSE_part)


State 214

   67 ELIF_part: ELIF LPAREN . expression RPAREN THEN statement
   68          | ELIF LPAREN . expression RPAREN THEN statement ELIF_part

    BANG    shift, and go to state 76
    LPAREN  shift, and go to state 77
    MINUS   shift, and go to state 78
    PLUS    shift, and go to state 79
    FALSE   shift, and go to state 80
    TRUE    shift, and go to state 81
    FCONST  shift, and go to state 82
    ICONST  shift, and go to state 83
    IDENT   shift, and go to state 50

    subroutine_call    go to state 84
    expression         go to state 220
    AND_expression     go to state 86
    logic_expression   go to state 87
    simple_expression  go to state 88
    term               go to state 89
    factor             go to state 90
    variable           go to state 91
    constant           go to state 92


State 215

   61 IF_statement: IF LPAREN expression RPAREN THEN statement statement ELIF_part . END
   64             | IF LPAREN expression RPAREN THEN statement statement ELIF_part . ELSE_part END

    ELSE  shift, and go to state 204
    END   shift, and go to state 221

    ELSE_part  go to state 222


State 216

   63 IF_statement: IF LPAREN expression RPAREN THEN statement ELSE_part END .

    $default  reduce using rule 63 (IF_statement)


State 217

   62 IF_statement: IF LPAREN expression RPAREN THEN statement ELIF_part END .

    $default  reduce using rule 62 (IF_statement)


State 218

   65 IF_statement: IF LPAREN expression RPAREN THEN statement ELIF_part ELSE_part . END

    END  shift, and go to state 223


State 219

   70 WRITE_statement: WRITE LPAREN SCONST COMMA expression COMMA expression RPAREN .

    $default  reduce using rule 70 (WRITE_statement)


State 220

   67 ELIF_part: ELIF LPAREN expression . RPAREN THEN statement
   68          | ELIF LPAREN expression . RPAREN THEN statement ELIF_part

    RPAREN  shift, and go to state 224


State 221

   61 IF_statement: IF LPAREN expression RPAREN THEN statement statement ELIF_part END .

    $default  reduce using rule 61 (IF_statement)


State 222

   64 IF_statement: IF LPAREN expression RPAREN THEN statement statement ELIF_part ELSE_part . END

    END  shift, and go to state 225


State 223

   65 IF_statement: IF LPAREN expression RPAREN THEN statement ELIF_part ELSE_part END .

    $default  reduce using rule 65 (IF_statement)


State 224

   67 ELIF_part: ELIF LPAREN expression RPAREN . THEN statement
   68          | ELIF LPAREN expression RPAREN . THEN statement ELIF_part

    THEN  shift, and go to state 226


State 225

   64 IF_statement: IF LPAREN expression RPAREN THEN statement statement ELIF_part ELSE_part END .

    $default  reduce using rule 64 (IF_statement)


State 226

   67 ELIF_part: ELIF LPAREN expression RPAREN THEN . statement
   68          | ELIF LPAREN expression RPAREN THEN . statement ELIF_part

    FOR     shift, and go to state 44
    IF      shift, and go to state 45
    READ    shift, and go to state 46
    RETURN  shift, and go to state 47
    WHILE   shift, and go to state 48
    WRITE   shift, and go to state 49
    IDENT   shift, and go to state 50

    $default  reduce using rule 44 (statement)

    statement             go to state 227
    assignment_statement  go to state 53
    subroutine_call       go to state 54
    RETURN_statement      go to state 55
    FOR_statement         go to state 56
    WHILE_statement       go to state 57
    IF_statement          go to state 58
    WRITE_statement       go to state 59
    READ_statement        go to state 60
    variable              go to state 61


State 227

   67 ELIF_part: ELIF LPAREN expression RPAREN THEN statement .
   68          | ELIF LPAREN expression RPAREN THEN statement . ELIF_part

    ELIF  shift, and go to state 205

    $default  reduce using rule 67 (ELIF_part)

    ELIF_part  go to state 228


State 228

   68 ELIF_part: ELIF LPAREN expression RPAREN THEN statement ELIF_part .

    $default  reduce using rule 68 (ELIF_part)
